namespace dps_msg;

struct TimeStamp {
  sec:ulong;
  nsec:ulong;
}

table PublisherInfo {
  queue_size:ulong;
  buffer_size:ulong;
  pid:uint;
  event_fd:int = -1; // -1 : not initialized
  dma_buff_fd:[int];
  /*
  -1 : never published
  from 0 to (queue_size - 1) : "start loop", size(index_cycle_pool) = (last_index + 1), index_pool = last_index[0:(last_index+1)]
  from queue_size to (2 * queue_size - 1) : "full loop", size(index_cycle_pool) = queue_size, index_pool = last_index[(last_index+1):queue_size] + last_index[0:(last_index+1)]
  in index_pool new values are in the end
  */
  last_index:int = -1;
  index_cycle_pool:[int];
  timestamp_pool:[TimeStamp]; // publication time, needed to obtain time-relevant value in case of multiple publishers
  msg_id_pool:[TimeStamp]; // message id, needed for synchronization in case of multi-subscription
}

root_type PublisherInfo;